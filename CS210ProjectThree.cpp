/*
Name: Maximo Obra Winfield
Instructor: Cynthia Marcello
Course: CS 210
Project: Project Three - Corner Grocer Item Tracking Program
Date: 2/18/2025
Description:
   This program analyzes text records generated by the Corner Grocer.
   It reads an input file containing items purchased, counts the frequency
   of each item, creates a backup frequency file (frequency.dat), and provides
   a menu-based interface for:
      1. Searching for a specific item’s frequency.
      2. Printing the complete frequency list.
      3. Displaying a histogram of items with asterisks representing their frequency.
      4. Exiting the program.
*/

#include <iostream>
#include <fstream>
#include <map>
#include <string>
#include <cstdlib>
using namespace std;

// ItemTracker class encapsulates the frequency analysis functionality.
class ItemTracker {
public:
    // Constructor: Reads the input file and builds the frequency map.
    ItemTracker(const string& filename) {
        ifstream fin(filename);
        if (!fin) {
            cerr << "Error: Unable to open file " << filename << endl;
            exit(1);
        }
        string word;
        // Read each word (item) from the file and update its frequency.
        while (fin >> word) {
            frequency[word]++;
        }
        fin.close();
    }

    // Writes the frequency backup to a file.
    void writeBackup(const string& backupFilename) {
        ofstream fout(backupFilename);
        if (!fout) {
            cerr << "Error: Unable to create backup file " << backupFilename << endl;
            return;
        }
        for (const auto& entry : frequency) {
            fout << entry.first << " " << entry.second << endl;
        }
        fout.close();
    }

    // Returns the frequency of a given item.
    int getFrequency(const string& item) const {
        auto it = frequency.find(item);
        if (it != frequency.end()) {
            return it->second;
        }
        return 0;
    }

    // Prints the list of items with their frequency counts.
    void printFrequencies() const {
        for (const auto& entry : frequency) {
            cout << entry.first << " " << entry.second << endl;
        }
    }

    // Prints a text-based histogram of the frequencies.
    void printHistogram() const {
        for (const auto& entry : frequency) {
            cout << entry.first << " ";
            for (int i = 0; i < entry.second; i++) {
                cout << "*";
            }
            cout << endl;
        }
    }

private:
    // Map that holds each item paired with its frequency.
    map<string, int> frequency;
};

int main() {
    // File names
    const string inputFilename = "CS210_Project_Three_Input_File.txt";
    const string backupFilename = "frequency.dat";

    // Create an instance of ItemTracker to process the input file.
    ItemTracker tracker(inputFilename);

    // Create the backup file with the frequency data.
    tracker.writeBackup(backupFilename);

    int choice;

    // Main menu loop.
    do {
        cout << "\nCorner Grocer Item Tracking Program Menu:" << endl;
        cout << "1. Search for an item's frequency" << endl;
        cout << "2. Print frequency list" << endl;
        cout << "3. Print histogram" << endl;
        cout << "4. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;

        // Validate input.
        if (cin.fail()) {
            cin.clear();
            cin.ignore(1000, '\n');
            cout << "Invalid input. Please enter a valid number." << endl;
            continue;
        }

        if (choice == 1) {
            // Option 1: Search for a specific item.
            cout << "Enter the item to search for: ";
            string searchItem;
            cin >> searchItem;
            int count = tracker.getFrequency(searchItem);
            cout << "Frequency of \"" << searchItem << "\": " << count << endl;
        }
        else if (choice == 2) {
            // Option 2: Print frequency list.
            cout << "\nFrequency List:" << endl;
            tracker.printFrequencies();
        }
        else if (choice == 3) {
            // Option 3: Print histogram.
            cout << "\nHistogram:" << endl;
            tracker.printHistogram();
        }
        else if (choice == 4) {
            // Option 4: Exit the program.
            cout << "Exiting program." << endl;
        }
        else {
            cout << "Invalid option. Please select from 1 to 4." << endl;
        }

    } while (choice != 4);

    return 0;
}
